

columns := []table.Column{
		{Title: "langs", Width: 30},
	}
	const lang = 20

	fmt.Println(data[0].Cs[lang].To)
	var rows []table.Row
	for i := range data {
		for j := range data[i].Cs {
			/*if len(data[0].Cs[lang].Ch[i].Be) > 0 && len(data[0].Cs[lang].Ch[i].Af) > 0 {
				row := table.Row{

					data[0].Cs[lang].Ch[i].Be[0],
					data[0].Cs[lang].Ch[i].Af[0],
					data[0].Cs[lang].Ch[i].En,
				}
				rows = append(rows, row)
			} */
			row := table.Row{
				data[i].Cs[j].To,
			}
			rows = append(rows, row)

		}
	}

t := table.New(
		table.WithColumns(columns),
		table.WithRows(rows),
		table.WithFocused(true),
		table.WithHeight(20),
	)

	s := table.DefaultStyles()
	s.Header = s.Header.
		BorderStyle(lipgloss.RoundedBorder()).
		BorderForeground(lipgloss.Color("240")).
		BorderBottom(true).
		Bold(true)
	s.Selected = s.Selected.
		Foreground(lipgloss.Color("229")).
		Background(lipgloss.Color("57")).
		Bold(true).Italic(true)

	t.SetStyles(s)